services:
    server:
        build:
            context: .
            target: dev
        secrets:
            - db-password
        environment:
            NODE_ENV: production
            POSTGRES_PASSWORD_FILE: /run/secrets/db-password
        ports:
            - 3000:3000
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy

        volumes:
            - ./:/usr/src/app/
        healthcheck:
            test: ['CMD', 'curl -f http://localhost:3000/check || exit 1']
            interval: 10s
            timeout: 5s
            retries: 5
        extra_hosts: ["host.docker.internal:host-gateway"]
    db:
        image: postgres
        restart: always
        user: postgres
        secrets:
            - db-password
        volumes:
            - db-data:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD_FILE: /run/secrets/db-password
        env_file:
            - .env
        ports: 
        - 5432:5432
        healthcheck:
            test: ['CMD', 'pg_isready']
            interval: 10s
            timeout: 5s
            retries: 5
    # pgadmin4:
    #     image: dpage/pgadmin4
    #     restart: always
    #     user: root
    #     ports: 
    #     - 5050:80
    #     secrets:
    #         - db-password
    #     environment:
    #         PGADMIN_DEFAULT_EMAIL: -waryor99@gmail.com
    #         PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/db-password
    #     volumes:
    #         - pgadmin:/var/lib/pgadmin
volumes:
    db-data:
    pgadmin:
secrets:
    db-password:
        file: db/password.txt
